service: "example-aws-api-gateway-websocket"
frameworkVersion: ">=2.0.0"

custom:
  dynamodbTableName: "example-aws-api-gateway-websocket-${self:provider.stage}"

provider:
  name: "aws"
  runtime: "nodejs12.x"
  stage: "${opt:stage, 'prod'}"
  region: "#{AWS::Region}"
  memorySize: 128
  timeout: 10
  deploymentBucket:
    name: "${env:DEPLOYMENT_S3_BUCKET}"
  versionFunctions: false
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "execute-api:Invoke"
      Resource: "arn:aws:execute-api:#{AWS::Region}:#{AWS::AccountId}:*/${self:provider.stage}/POST/prod/*"
    - Effect: "Allow"
      Action:
        - "dynamodb:GetItem"
        - "dynamodb:PutItem"
        - "dynamodb:UpdateItem"
        - "dynamodb:DeleteItem"
      Resource:
        - "arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:custom.dynamodbTableName}"

plugins:
  - "serverless-pseudo-parameters"

functions:
  onConnect:
    handler: "handler/connect.handler"
    events:
      - websocket:
          route: "$connect"
  onMessage:
    handler: "handler/message.handler"
    events:
      - websocket:
          route: "$default"
  onDisconnect:
    handler: "handler/disconnect.handler"
    events:
      - websocket:
          route: "$disconnect"

